version: '1.0'
kind: step-type
metadata:
  name: raphx/aws-secrets-manager
  title: Fetch secrets from AWS Secrets Manager
  version: 0.0.2
  isPublic: false
  description: Fetch secrets and export them to be used in subsequent steps.
  sources:
    - 'https://github.com/moneylion/cfstep-aws-secrets-manager'
  stage: incubating
  maintainers:
    - name: Raphx
      email: cling@moneylion.com
  categories:
    - aws
    - secret management
  official: false
  tags: []
  icon:
    type: svg
    url: 'https://d3f44cr96bpmfn.cloudfront.net/AWS-Secrets-Manager.svg'
    background: '#f4f4f4'
  examples:
    - description: example-1
      workflow:
        GetAwsSecrets:
          title: Fetch secrets from AWS Secrets Manager
          type: raphx/aws-secrets-manager
          arguments:
            AWS_ACCESS_KEY_ID: ${{AWS_ACCESS_KEY_ID}}
            AWS_SECRET_ACCESS_KEY: ${{AWS_SECRET_ACCESS_KEY}}
            AWS_DEFAULT_REGION: ${{AWS_DEFAULT_REGION}}
            AWS_IAM_ROLE_ARN: ${{AWS_IAM_ROLE_ARN}}
            secrets:
              - secret_arn: arn:aws:secretsmanager:us-east-1:1234:secret:postgres_secrets
                key: username
                store_in: POSTGRES_USERNAME
              - secret_arn: arn:aws:secretsmanager:us-east-1:1234:secret:postgres_secrets
                key: password
                store_in: POSTGRES_PASSWORD
  created_at: '2019-12-26T08:24:56Z'
  updated_at: '2020-05-08T03:17:16Z'
  latest: true
spec:
  arguments: |-
    {
      "definitions": {},
      "$schema": "http://json-schema.org/draft-07/schema#",
      "type": "object",
      "additionalProperties": false,
      "patterns": [],
      "required": [
        "AWS_ACCESS_KEY_ID",
        "AWS_SECRET_ACCESS_KEY",
        "AWS_DEFAULT_REGION",
        "AWS_IAM_ROLE_ARN",
        "secrets"
      ],
      "properties": {
        "AWS_ACCESS_KEY_ID": {
          "type": "string",
          "description": "AWS credential access key ID",
          "default": "${{AWS_ACCESS_KEY_ID}}"
        },
        "AWS_SECRET_ACCESS_KEY": {
          "type": "string",
          "description": "AWS credential secret access key",
          "default": "${{AWS_SECRET_ACCESS_KEY}}"
        },
        "AWS_DEFAULT_REGION": {
          "type": "string",
          "description": "AWS region to operate in",
          "default": "${{AWS_DEFAULT_REGION}}"
        },
        "AWS_IAM_ROLE_ARN": {
          "type": "string",
          "description": "ARN of AWS IAM role to be assumed",
          "default": "${{AWS_IAM_ROLE_ARN}}"
        },
        "secrets": {
          "type": "array",
          "description": "List of AWS Secrets Manager's secrets to fetch",
          "items": {
            "type": "object",
            "required": [
              "secret_arn",
              "key",
              "store_in"
            ],
            "properties": {
              "secret_arn": {
                "type": "string",
                "description": "The AWS ARN for secrets"
              },
              "key": {
                "type": "string",
                "description": "The JSON key for which the secret value is tied to"
              },
              "store_in": {
                "type": "string",
                "description": "Codefresh environment variable to store the secret in"
              }
            }
          }
        }
      }
    }
  stepsTemplate: |-
    main:
      name: raphx/aws-secrets-manager
      image: raphx/cfstep-aws-secrets-manager
      environment:
        - 'AWS_ACCESS_KEY_ID=[[ .Arguments.AWS_ACCESS_KEY_ID ]]'
        - 'AWS_SECRET_ACCESS_KEY=[[ .Arguments.AWS_SECRET_ACCESS_KEY ]]'
        - 'AWS_DEFAULT_REGION=[[ .Arguments.AWS_DEFAULT_REGION ]]'
        - 'AWS_IAM_ROLE_ARN=[[ .Arguments.AWS_IAM_ROLE_ARN ]]'
      [[ $secrets := slice ]]
      [[ range $secret := .Arguments.secrets ]]
      [[ $secret_str := (join (slice $secret.secret_arn $secret.key $secret.store_in) "#") ]]
      [[ $secrets = (append $secret_str $secrets) ]]
      [[ end ]]
        - 'SECRETS=[[ join $secrets "|" | trimSpace ]]'
  delimiters:
    left: '[['
    right: ']]'
